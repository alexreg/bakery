public TOut Generic_ExtensionMethodWithGenericReturnValueAndTypeParamConstraints<TIn,TEnumerable,TStruct,TOut>(TIn arg, TEnumerable expression, TStruct @struct) where TIn : class,new() where TEnumerable : System.Collections.Generic.IEnumerable<TIn> where TStruct : struct,System.IConvertible where TOut : System.Collections.ArrayList,System.IDisposable
{
    return Cake.Scripting.Tests.Data.CakeMethodAliasGeneratorData.Generic_ExtensionMethodWithGenericReturnValueAndTypeParamConstraints<TIn,TEnumerable,TStruct,TOut>(Context, arg, expression, @struct);
}